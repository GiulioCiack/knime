<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsNamespace" type="xstring" value="knimeConditionalBoxplot"/>
<config key="jsCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="/* global d3:false */%%00010window.knimeConditionalBoxplot = (function () {%%00010    var boxplot = {};%%00010    var _data = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var maxY = 0;%%00010    var minY = 0;%%00010    var Y_TICK_COUNT = 5;%%00010    var Y_LABEL_MAX_WIDTH = 200;%%00010    %%00010    var _representation, _value, layoutContainer,%%00010        _switchMissValClassCbx, _missValClass,%%00010        drawChart, drawControls, processMissingValues, updateSubtitle, updateTitle,%%00010        compareCategories, resize;%%00010%%00010    var MISSING_VALUES_CLASS = 'Missing values';%%00010%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var IGNORED_MISSING_VALUES = 'ignoredMissingValues';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_DATA_COLUMN = 'noDataColumn';%%00010%%00010%%00010    boxplot.init = function (representation, value) {%%00010        // Store value and representation for later%%00010        _value = value;%%00010        _representation = representation;%%00010%%00010        // No numeric columns available?%%00010        if (_representation.options.columns.length === 0) {%%00010            alert('No numeric columns selected');%%00010            return;%%00010        }%%00010%%00010        // If no column to show is selected yet, we take the first from all candidates%%00010        if (!_value.options.numCol) {%%00010            _value.options.numCol = _representation.options.columns[0];%%00010        }%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        var body = d3.select('body');%%00010%%00010        // Create container for our content%%00010        layoutContainer = body.append('div')%%00010            .attr('id', 'layoutContainer')%%00010            .attr('class', 'knime-layout-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Size layout container based on sizing settings%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            layoutContainer.style('width', '100%')%%00010                .style('height', '100%');%%00010        } else {%%00010            layoutContainer.style('width', _representation.options.svg.width + 'px')%%00010                .style('height', _representation.options.svg.height + 'px');%%00010        }%%00010%%00010        var div = layoutContainer.append('div')%%00010            .attr('id', 'svgContainer')%%00010            .attr('class', 'knime-svg-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Add SVG element%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        var d3svg = d3.select('svg');%%00010        // Add rectangle for background color%%00010        d3svg.append('rect')%%00010            .attr('id', 'bgr')%%00010            .attr('fill', _representation.options.backgroundColor);%%00010%%00010        // Append a group for the plot and add a rectangle for the data area background%%00010        d3svg.append('g')%%00010            .attr('id', 'plotG')%%00010            .append('rect')%%00010            .attr('id', 'da')%%00010            .attr('fill', _representation.options.daColor);%%00010%%00010        // Title%%00010        d3svg.append('text')%%00010            .attr('id', 'title')%%00010            .attr('class', 'knime-title')%%00010            .attr('x', 20)%%00010            .attr('y', 30)%%00010            .text(_value.options.title);%%00010%%00010        // Subtitle%%00010        d3svg.append('text')%%00010            .attr('id', 'subtitle')%%00010            .attr('class', 'knime-subtitle')%%00010            .attr('x', 20)%%00010            .text(_value.options.subtitle);%%00010        // y attr is set in drawChart%%00010%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        drawChart();%%00010%%00010        if (window.parent.KnimePageLoader) {%%00010            window.parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010        }%%00010    };%%00010%%00010    drawControls = function () {%%00010        if (_representation.options.displayFullscreen) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.enableTitleEdit || _representation.options.enableSubtitleEdit) {%%00010            if (_representation.options.enableTitleEdit) {%%00010                var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                    updateTitle, true);%%00010                knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010            }%%00010%%00010            if (_representation.options.enableSubtitleEdit) {%%00010                var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                    updateSubtitle, true);%%00010                knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010            }%%00010%%00010            if (_representation.options.enableColumnSelection) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableColumnSelection) {%%00010            var colSelect = knimeService.createMenuSelect('columnSelect', _value.options.numCol,%%00010                _representation.options.columns, function () {%%00010                    _value.options.numCol = this.value;%%00010                    drawChart();%%00010                });%%00010            knimeService.addMenuItem('Selected column:', 'minus-square fa-rotate-90', colSelect);%%00010%%00010            if (_representation.options.enableSwitchMissValClass) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableSwitchMissValClass &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            _switchMissValClassCbx = knimeService.createMenuCheckbox('switchMissValClassCbx',%%00010                _value.options.includeMissValClass, function () {%%00010                    if (_value.options.includeMissValClass !== this.checked) {%%00010                        _value.options.includeMissValClass = this.checked;%%00010                        drawChart();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' class: ', 'question', _switchMissValClassCbx);%%00010        }%%00010    };%%00010%%00010    updateTitle = function () {%%00010        var hadTitle = _value.options.title.length &gt; 0;%%00010        _value.options.title = document.getElementById('chartTitleText').value;%%00010        var hasTitle = _value.options.title.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the title appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#title').text(_value.options.title);%%00010    };%%00010%%00010    updateSubtitle = function () {%%00010        var hadTitle = _value.options.subtitle.length &gt; 0;%%00010        _value.options.subtitle = document.getElementById('chartSubtitleText').value;%%00010        var hasTitle = _value.options.subtitle.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the subtitle appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#subtitle').text(_value.options.subtitle);%%00010    };%%00010%%00010    // Draws the chart. If resizing is true, there are no animations.%%00010    drawChart = function (resizing) {%%00010%%00010        // Select the data to show%%00010        _data = _representation.inObjects[0].stats[_value.options.numCol];%%00010%%00010        _missValClass = undefined; // eslint-disable-line no-undefined%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _data !== 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] !== 'undefined') {%%00010            _missValClass = _data[MISSING_VALUES_CLASS];%%00010            delete _data[MISSING_VALUES_CLASS];%%00010        }%%00010%%00010        // Find the maximum y-value for the axis%%00010        maxY = Number.NEGATIVE_INFINITY;%%00010        minY = Number.POSITIVE_INFINITY;%%00010        for (var key in _data) {%%00010            maxY = Math.max(_data[key].max, maxY);%%00010            minY = Math.min(_data[key].min, minY);%%00010        }%%00010%%00010        // Calculate the correct chart width%%00010        var cw = Math.max(MIN_WIDTH, _representation.options.svg.width);%%00010        var ch = Math.max(MIN_HEIGHT, _representation.options.svg.height);%%00010%%00010        var chartWidth = cw + 'px';%%00010        var chartHeight = ch + 'px';%%00010        // If we are fullscreen, we set the chart width to 100%%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            chartWidth = '100%';%%00010            chartHeight = '100%';%%00010        }%%00010%%00010        d3.select('#svgContainer')%%00010            .style('height', chartHeight)%%00010            .style('width', chartWidth);%%00010%%00010        // The margins for the plot area%%00010        var topMargin = 10;%%00010        if (_value.options.title &amp;&amp; _value.options.subtitle) {%%00010            topMargin += 50;%%00010        } else if (_value.options.title) {%%00010            topMargin += 36;%%00010        } else if (_value.options.subtitle) {%%00010            topMargin += 26;%%00010        }%%00010%%00010        var margins = {%%00010            top: topMargin,%%00010            bottom: 40,%%00010            right: 10%%00010        };%%00010%%00010        d3.select('#subtitle').attr('y', topMargin - 14);%%00010%%00010        var d3svg = d3.select('svg')%%00010            .attr({ width: cw, height: ch })%%00010            .style({ width: chartWidth, height: chartHeight });%%00010%%00010        // Calculate height of the plot area (without x-axis)%%00010        var h = Math.max(50, parseInt(d3svg.style('height'), 10) - margins.top - margins.bottom);%%00010%%00010        // y-axis scale%%00010        var yScale = d3.scale.linear().domain([minY, maxY]).range([h, 0]).nice();%%00010%%00010        // determine required margin-left%%00010        var yLabels = yScale.ticks(Y_TICK_COUNT).map(yScale.tickFormat(Y_TICK_COUNT)).map(String);%%00010        var maxYLabelWidth = knimeService.measureAndTruncate(yLabels, {%%00010            container: d3svg.node(),%%00010            classes: 'knime-tick-label',%%00010            maxWidth: Y_LABEL_MAX_WIDTH%%00010        }).max.maxWidth;%%00010        margins.left = 15 + maxYLabelWidth;%%00010%%00010        // Calculate width of the plot area (without y-axis)%%00010        var w = Math.max(50, parseInt(d3svg.style('width'), 10) - margins.left - margins.right);%%00010%%00010        // x-axis scale%%00010        var xScale = d3.scale.ordinal().domain(d3.keys(_data).sort(compareCategories)).rangeBands([0, w], 0.75, 0.5);%%00010%%00010        // color scale%%00010        var colorScale = d3.scale.category10();%%00010        if (_value.options.applyColors) {%%00010            if (d3.entries(_data).length &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            }%%00010            if (_representation.inObjects[1] &amp;&amp; _representation.inObjects[1].spec.colTypes[0] === 'string') {%%00010                var categories = [];%%00010                var colors = _representation.inObjects[1].spec.rowColorValues;%%00010                for (var i = 0; i &lt; _representation.inObjects[1].rows.length; i++) {%%00010                    categories.push(_representation.inObjects[1].rows[i].data[0]);%%00010                }%%00010                categories.push(null);%%00010                colors.push('#404040');%%00010                colorScale = d3.scale.ordinal().domain(categories).range(colors);%%00010            }%%00010        }%%00010%%00010        // Position the plot group based on the margins%%00010        var plotG = d3svg.select('#plotG')%%00010            .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');%%00010%%00010        // Resize background rectangles%%00010        plotG.select('#da').attr({%%00010            width: w,%%00010            height: h + 5%%00010        });%%00010        d3svg.select('#bgr').attr({%%00010            width: w + margins.left + margins.right,%%00010            height: h + margins.top + margins.bottom%%00010        });%%00010%%00010        // d3 axes%%00010        var xAxis = d3.svg.axis().scale(xScale)%%00010            .orient('bottom');%%00010        var yAxis = d3.svg.axis().scale(yScale)%%00010            .orient('left').ticks(Y_TICK_COUNT);%%00010%%00010        // Remove axes so they are redrawn%%00010        d3.selectAll('.axis').remove();%%00010%%00010        // Append and style x-axis%%00010        var d3XAxis = plotG.append('g')%%00010            .attr('class', 'x axis knime-x knime-axis')%%00010            .attr('transform', 'translate(0,' + (h + 5) + ')')%%00010            .call(xAxis);%%00010        d3XAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        // Append and style y-axis%%00010        var d3YAxis = plotG.append('g')%%00010            .attr('class', 'y axis knime-y knime-axis')%%00010            .call(yAxis);%%00010        d3YAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        plotG.selectAll('.axis-label').remove();%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'y axis-label knime-y knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('y', 6)%%00010            .attr('dy', '.75em')%%00010            .attr('transform', 'rotate(-90)')%%00010            .text(_value.options.numCol);%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'x axis-label knime-x knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('x', w)%%00010            .attr('y', h - 6)%%00010            .text(_representation.inObjects[0].catCol);%%00010%%00010        d3.selectAll('.domain')%%00010            .classed('knime-axis-line', true);%%00010        var ticks = d3.selectAll('.tick')%%00010            .classed('knime-tick', true);%%00010        ticks.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010        ticks.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010%%00010        // Animate only when running in view and not resizing%%00010        var duration = (_representation.runningInView &amp;&amp; !resizing) ? 500 : 0;%%00010%%00010        // Create a selection for each box with data that we created at the beginning%%00010        var boxG = plotG.selectAll('g.box')%%00010            .data(d3.entries(_data), function (d) {%%00010                return d.key;%%00010            });%%00010%%00010        // Remove boxes that are not in the data anymore%%00010        boxG.exit().remove();%%00010%%00010        // Append a group element for each new box and shift it according to the class%%00010        var box = boxG.enter().append('g')%%00010            .attr('class', 'box')%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // Transition all boxes to their position%%00010        d3.selectAll('.box').transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // The main rectangle for the box%%00010        box.append('rect')%%00010            .attr('class', 'boxrect')%%00010            .attr('stroke', 'black')%%00010            // .attr(&quot;fill&quot;, _representation.options.boxColor || &quot;none&quot;);%%00010            .attr('fill', function (d) {%%00010                if (_value.options.applyColors) {%%00010                    return colorScale(d.key);%%00010                } else {%%00010                    return _representation.options.boxColor || 'none';%%00010                }%%00010            });%%00010%%00010        // Update the box according to the data%%00010        boxG.selectAll('.boxrect')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('height', function (d) { return yScale(d.value.lowerQuartile) - yScale(d.value.upperQuartile); })%%00010            .attr('width', xScale.rangeBand());%%00010%%00010        // The middle of the box on the x-axis%%00010        var middle = xScale.rangeBand() / 2;%%00010%%00010        // Text for the upper quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'uqText knime-label');%%00010        boxG.selectAll('.uqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.upperQuartile * 100) / 100; });%%00010%%00010        // Text for the lower quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'lqText knime-label');%%00010        boxG.selectAll('.lqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.lowerQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerQuartile * 100) / 100; });%%00010%%00010%%00010        // Median%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('stroke-width', 3)%%00010            .attr('x1', '0')%%00010            .attr('class', 'median');%%00010%%00010        boxG.selectAll('.median')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.median); })%%00010            .attr('y2', function (d) { return yScale(d.value.median); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'medianText knime-label');%%00010%%00010        boxG.selectAll('.medianText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.median) + 3; })%%00010            .text(function (d) { return Math.round(d.value.median * 100) / 100; });%%00010%%00010        // Upper whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'uwL1');%%00010%%00010        boxG.selectAll('.uwL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'uwL2');%%00010%%00010        boxG.selectAll('.uwL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.upperWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'uwText knime-label');%%00010%%00010        boxG.selectAll('.uwText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.upperWhisker) + 10; })%%00010            .text(function (d) { return Math.round(d.value.upperWhisker * 100) / 100; });%%00010%%00010        // Lower whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'ulL1');%%00010%%00010        boxG.selectAll('.ulL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.lowerQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'ulL2');%%00010%%00010        boxG.selectAll('.ulL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.lowerWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'ulText knime-label');%%00010%%00010        boxG.selectAll('.ulText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.lowerWhisker) - 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerWhisker * 100) / 100; });%%00010%%00010        // Mild outliers%%00010        var outl = boxG.selectAll('circle.mo')%%00010            .data(function (d) { return d.value.mildOutliers; });%%00010%%00010        outl.enter().append('circle')%%00010            .attr('class', 'mo')%%00010            .attr('r', 5)%%00010            .attr('fill', _representation.options.daColor)%%00010            .attr('stroke', 'black')%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        outl.transition().duration(duration)%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); });%%00010%%00010        outl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        // Extreme outliers%%00010        var exoutl = boxG.selectAll('g.eo')%%00010            .data(function (d) { return d.value.extremeOutliers; });%%00010%%00010        var enterG = exoutl.enter().append('g')%%00010            .attr('class', 'eo')%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        var crossSize = 4;%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: -crossSize,%%00010                x2: crossSize,%%00010                y2: crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: crossSize,%%00010                x2: crossSize,%%00010                y2: -crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        exoutl.transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        // Fade out outliers%%00010        exoutl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        processMissingValues();%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _missValClass !== 'undefined') {%%00010            _data[MISSING_VALUES_CLASS] = _missValClass;%%00010        }%%00010%%00010        // Set resize handler%%00010        if (_representation.options.svg.fullscreen) {%%00010            var win = document.defaultView || document.parentWindow;%%00010            win.onresize = resize;%%00010        }%%00010    };%%00010%%00010    // Use custom compare function to ensure that the missing values category is the last one%%00010    compareCategories = function (a, b) {%%00010        if (a = 'Missing values') {%%00010            return 1;%%00010        }%%00010        if (a &lt; b) {%%00010            return -1;%%00010        }%%00010        if (a &gt; b) {%%00010            return 1;%%00010        }%%00010        return 0;%%00010    };%%00010%%00010    resize = function (event) {%%00010        drawChart(true);%%00010    };%%00010%%00010    processMissingValues = function () {%%00010        if (!_representation.options.showWarnings) {%%00010            return;%%00010        }%%00010%%00010        knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010        knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010        knimeService.clearWarningMessage(IGNORED_MISSING_VALUES);%%00010        knimeService.clearWarningMessage(NO_DATA_COLUMN);%%00010%%00010        // temporary workaround for being able to select a data column which was not included in the node settings%%00010        if (typeof _data === 'undefined') {%%00010            knimeService.setWarningMessage('No chart was generated since the selected column was not included in the ' +%%00010                'node configuration dialog. Please choose another column or add the selected column to the list of ' +%%00010                'included columns.', NO_DATA_COLUMN);%%00010            return;%%00010        }%%00010%%00010        var excludedClasses = _representation.inObjects[0].excludedClasses[_value.options.numCol];%%00010        var ignoredMissVals = _representation.inObjects[0].ignoredMissVals[_value.options.numCol];%%00010%%00010        if (typeof _switchMissValClassCbx !== 'undefined') {%%00010            if (typeof _missValClass === 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] === 'undefined' &amp;&amp;%%00010                excludedClasses.indexOf(MISSING_VALUES_CLASS) === -1 &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] === 'undefined') {%%00010                // there's no missing values in class column - disable the control%%00010                _switchMissValClassCbx.disabled = true;%%00010                _switchMissValClassCbx.checked = false;%%00010            } else {%%00010                // restore the state%%00010                _switchMissValClassCbx.disabled = false;%%00010                _switchMissValClassCbx.checked = _value.options.includeMissValClass;%%00010            }%%00010        }%%00010%%00010        var missValClass, ignoredMVal;%%00010        // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010        if (!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) {%%00010            excludedClasses = excludedClasses.filter(function (x) {%%00010                return x !== MISSING_VALUES_CLASS;%%00010            });%%00010%%00010            if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] !== 'undefined') {%%00010                missValClass = ignoredMissVals[MISSING_VALUES_CLASS];%%00010                delete ignoredMissVals[MISSING_VALUES_CLASS];%%00010            }%%00010        }%%00010%%00010        if (Object.keys(_data).length === 0) {%%00010            if (typeof _missValClass !== 'undefined' &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nThere are values where the class name is missing.\n' +%%00010                    'To see them switch on the option &quot;Include \'Missing values\' class&quot; in the view settings.',%%00010                    NO_DATA_AVAILABLE);%%00010            } else {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nChoose another data column or re-run the workflow with different data.',%%00010                    NO_DATA_AVAILABLE);%%00010            }%%00010        } else if (_representation.options.reportOnMissingValues) {%%00010            if (excludedClasses.length &gt; 0) {%%00010                knimeService.setWarningMessage('Following classes contain only missing values or special doubles and ' +%%00010                    'were excluded from the view:\n    ' + excludedClasses.join('\n    '), MISSING_VALUES_ONLY);%%00010            }%%00010            if (Object.keys(ignoredMissVals).length &gt; 0) {%%00010                var str = '';%%00010                for (ignoredMVal in ignoredMissVals) {%%00010                    // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010                    if (ignoredMissVals.hasOwnProperty(ignoredMVal) &amp;&amp;%%00010                        (_value.options.includeMissValClass || ignoredMVal !== MISSING_VALUES_CLASS)) {%%00010                        str += '    ' + ignoredMVal + ' - ' + ignoredMissVals[ignoredMVal] +%%00010                            ' missing value(s) or special double(s)\n';%%00010                    }%%00010                }%%00010                knimeService.setWarningMessage('Missing values or special doubles ignored during statistics ' +%%00010                    'calculations per class:\n' + str, IGNORED_MISSING_VALUES);%%00010            }%%00010        }%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof missValClass !== 'undefined') {%%00010            ignoredMissVals[MISSING_VALUES_CLASS] = missValClass;%%00010        }%%00010    };%%00010%%00010    boxplot.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    boxplot.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    boxplot.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    return boxplot;%%00010%%00010})();%%00010"/>
</config>
<config key="cssCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value=".axis path,%%00010line {%%00010  fill: none;%%00010  stroke: #000;%%00010  shape-rendering: crispEdges;%%00010}"/>
</config>
<config key="jsDependencies">
<entry key="numSettings" type="xint" value="2"/>
<config key="dependency_0">
<entry key="name" type="xstring" value="D3"/>
<entry key="path" type="xstring" value="js-lib/d3/d3.v3_2_8.min.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" isnull="true" value=""/>
<config key="dependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
<config key="dependency_1">
<entry key="name" type="xstring" value="jQuery"/>
<entry key="path" type="xstring" value="js-lib/jQuery/jquery-1.11.0.min.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" isnull="true" value=""/>
<config key="dependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="new" type="xboolean" value="false"/>
<entry key="inView" type="xboolean" value="true"/>
<config key="tableIds">
<entry key="array-size" type="xint" value="2"/>
<entry key="0" type="xstring" value="4d8b405b-2fa1-4ed8-81bc-e107a0cbed22"/>
<entry key="1" type="xstring" isnull="true" value=""/>
</config>
<config key="variables">
<entry key="numSettings" type="xint" value="1"/>
<entry key="mapClass" type="xstring" value="string"/>
<entry key="key_0" type="xstring" value="knime.workspace"/>
<entry key="class_0" type="xstring" value="java.lang.String"/>
<entry key="value_0" type="xstring" value="C:\Users\giuli\knime-workspace"/>
</config>
<config key="binaryFiles">
<entry key="numSettings" type="xint" value="0"/>
<entry key="mapClass" type="xstring" value="string"/>
</config>
<config key="options">
<entry key="numSettings" type="xint" value="14"/>
<entry key="mapClass" type="xstring" value="object"/>
<entry key="key_0" type="xstring" value="backgroundColor"/>
<entry key="class_0" type="xstring" value="java.lang.String"/>
<entry key="value_0" type="xstring" value="#FFFFFF"/>
<entry key="key_1" type="xstring" value="svg"/>
<entry key="class_1" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
<config key="value_1">
<entry key="width" type="xint" value="800"/>
<entry key="height" type="xint" value="600"/>
<entry key="fullscreen" type="xboolean" value="true"/>
</config>
<entry key="key_2" type="xstring" value="enableSwitchMissValClass"/>
<entry key="class_2" type="xstring" value="java.lang.Boolean"/>
<entry key="value_2" type="xboolean" value="true"/>
<entry key="key_3" type="xstring" value="columns"/>
<entry key="class_3" type="xstring" value="[Ljava.lang.String;"/>
<config key="value_3">
<entry key="array-size" type="xint" value="4"/>
<entry key="0" type="xstring" value="dimensione_carrello"/>
<entry key="1" type="xstring" value="frequenza_acquisti"/>
<entry key="2" type="xstring" value="Prezzo Medio"/>
<entry key="3" type="xstring" value="numero_articoli"/>
</config>
<entry key="key_4" type="xstring" value="boxColor"/>
<entry key="class_4" type="xstring" value="java.lang.String"/>
<entry key="value_4" type="xstring" value="#FFFFFF"/>
<entry key="key_5" type="xstring" value="enableTitleEdit"/>
<entry key="class_5" type="xstring" value="java.lang.Boolean"/>
<entry key="value_5" type="xboolean" value="true"/>
<entry key="key_6" type="xstring" value="displayFullscreen"/>
<entry key="class_6" type="xstring" value="java.lang.Boolean"/>
<entry key="value_6" type="xboolean" value="true"/>
<entry key="key_7" type="xstring" value="reportOnMissingValues"/>
<entry key="class_7" type="xstring" value="java.lang.Boolean"/>
<entry key="value_7" type="xboolean" value="true"/>
<entry key="key_8" type="xstring" value="catCol"/>
<entry key="class_8" type="xstring" value="java.lang.String"/>
<entry key="value_8" type="xstring" value="Cluster"/>
<entry key="key_9" type="xstring" value="enableViewControls"/>
<entry key="class_9" type="xstring" value="java.lang.Boolean"/>
<entry key="value_9" type="xboolean" value="true"/>
<entry key="key_10" type="xstring" value="enableColumnSelection"/>
<entry key="class_10" type="xstring" value="java.lang.Boolean"/>
<entry key="value_10" type="xboolean" value="true"/>
<entry key="key_11" type="xstring" value="showWarnings"/>
<entry key="class_11" type="xstring" value="java.lang.Boolean"/>
<entry key="value_11" type="xboolean" value="true"/>
<entry key="key_12" type="xstring" value="enableSubtitleEdit"/>
<entry key="class_12" type="xstring" value="java.lang.Boolean"/>
<entry key="value_12" type="xboolean" value="true"/>
<entry key="key_13" type="xstring" value="daColor"/>
<entry key="class_13" type="xstring" value="java.lang.String"/>
<entry key="value_13" type="xstring" value="#FFFFFF"/>
</config>
<config key="inObjects">
<entry key="numSettings" type="xint" value="2"/>
<config key="inObject_0">
<entry key="className" type="xstring" value="org.knime.dynamic.js.base.boxplot.ConditionalBoxplotProcessor_v2$CondBoxPlotResult"/>
<entry key="jsonValue" type="xstring" value="{&quot;excludedClasses&quot;:{&quot;dimensione_carrello&quot;:[],&quot;frequenza_acquisti&quot;:[],&quot;Prezzo Medio&quot;:[],&quot;numero_articoli&quot;:[]},&quot;ignoredMissVals&quot;:{&quot;dimensione_carrello&quot;:{},&quot;frequenza_acquisti&quot;:{},&quot;Prezzo Medio&quot;:{},&quot;numero_articoli&quot;:{}},&quot;stats&quot;:{&quot;dimensione_carrello&quot;:{&quot;cluster_0&quot;:{&quot;min&quot;:28.299999999999994,&quot;extremeOutliers&quot;:[{&quot;value&quot;:702.4166666666666,&quot;rowKey&quot;:&quot;Row314_Row314&quot;}],&quot;max&quot;:702.4166666666666,&quot;lowerQuartile&quot;:129.5,&quot;upperQuartile&quot;:271.92857142857144,&quot;lowerWhisker&quot;:28.299999999999994,&quot;upperWhisker&quot;:484.3333333333333,&quot;mildOutliers&quot;:[{&quot;value&quot;:608.8333333333335,&quot;rowKey&quot;:&quot;Row106_Row106&quot;},{&quot;value&quot;:491.76923076923083,&quot;rowKey&quot;:&quot;Row3187_Row3187&quot;},{&quot;value&quot;:614.0,&quot;rowKey&quot;:&quot;Row409_Row409&quot;},{&quot;value&quot;:487.4000000000001,&quot;rowKey&quot;:&quot;Row1326_Row1326&quot;},{&quot;value&quot;:588.5714285714286,&quot;rowKey&quot;:&quot;Row101_Row101&quot;},{&quot;value&quot;:592.9333333333334,&quot;rowKey&quot;:&quot;Row3155_Row3155&quot;},{&quot;value&quot;:542.4545454545454,&quot;rowKey&quot;:&quot;Row3640_Row3640&quot;},{&quot;value&quot;:495.125,&quot;rowKey&quot;:&quot;Row566_Row566&quot;},{&quot;value&quot;:531.625,&quot;rowKey&quot;:&quot;Row650_Row650&quot;},{&quot;value&quot;:515.6666666666667,&quot;rowKey&quot;:&quot;Row3708_Row3708&quot;},{&quot;value&quot;:518.1428571428572,&quot;rowKey&quot;:&quot;Row340_Row340&quot;},{&quot;value&quot;:614.5714285714287,&quot;rowKey&quot;:&quot;Row3701_Row3701&quot;},{&quot;value&quot;:496.25,&quot;rowKey&quot;:&quot;Row291_Row291&quot;},{&quot;value&quot;:510.6249999999999,&quot;rowKey&quot;:&quot;Row1896_Row1896&quot;},{&quot;value&quot;:634.9375,&quot;rowKey&quot;:&quot;Row3300_Row3300&quot;},{&quot;value&quot;:609.2,&quot;rowKey&quot;:&quot;Row298_Row298&quot;},{&quot;value&quot;:542.5,&quot;rowKey&quot;:&quot;Row112_Row112&quot;},{&quot;value&quot;:560.9999999999999,&quot;rowKey&quot;:&quot;Row2132_Row2132&quot;},{&quot;value&quot;:507.3333333333334,&quot;rowKey&quot;:&quot;Row1211_Row1211&quot;}],&quot;median&quot;:196.72727272727272},&quot;cluster_1&quot;:{&quot;min&quot;:215.74999999999997,&quot;extremeOutliers&quot;:[],&quot;max&quot;:806.3333333333331,&quot;lowerQuartile&quot;:323.99999999999994,&quot;upperQuartile&quot;:510.00000000000006,&quot;lowerWhisker&quot;:215.74999999999997,&quot;upperWhisker&quot;:788.8888888888888,&quot;mildOutliers&quot;:[{&quot;value&quot;:806.3333333333331,&quot;rowKey&quot;:&quot;Row102_Row102&quot;},{&quot;value&quot;:797.3333333333331,&quot;rowKey&quot;:&quot;Row2062_Row2062&quot;},{&quot;value&quot;:798.5,&quot;rowKey&quot;:&quot;Row227_Row227&quot;},{&quot;value&quot;:799.0,&quot;rowKey&quot;:&quot;Row1572_Row1572&quot;},{&quot;value&quot;:800.0,&quot;rowKey&quot;:&quot;Row1635_Row1635&quot;},{&quot;value&quot;:800.0,&quot;rowKey&quot;:&quot;Row1297_Row1297&quot;},{&quot;value&quot;:795.0,&quot;rowKey&quot;:&quot;Row2025_Row2025&quot;},{&quot;value&quot;:800.0,&quot;rowKey&quot;:&quot;Row961_Row961&quot;}],&quot;median&quot;:389.79999999999995},&quot;cluster_2&quot;:{&quot;min&quot;:1.9999999999999998,&quot;extremeOutliers&quot;:[{&quot;value&quot;:333.99999999999994,&quot;rowKey&quot;:&quot;Row1980_Row1980&quot;},{&quot;value&quot;:380.0,&quot;rowKey&quot;:&quot;Row1360_Row1360&quot;},{&quot;value&quot;:526.0,&quot;rowKey&quot;:&quot;Row1534_Row1534&quot;},{&quot;value&quot;:408.66666666666663,&quot;rowKey&quot;:&quot;Row996_Row996&quot;},{&quot;value&quot;:524.3333333333333,&quot;rowKey&quot;:&quot;Row9_Row9&quot;},{&quot;value&quot;:364.49999999999994,&quot;rowKey&quot;:&quot;Row3896_Row3896&quot;},{&quot;value&quot;:355.99999999999994,&quot;rowKey&quot;:&quot;Row341_Row341&quot;},{&quot;value&quot;:386.0,&quot;rowKey&quot;:&quot;Row339_Row339&quot;}],&quot;max&quot;:526.0,&quot;lowerQuartile&quot;:41.0,&quot;upperQuartile&quot;:114.0,&quot;lowerWhisker&quot;:1.9999999999999998,&quot;upperWhisker&quot;:219.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:272.59999999999997,&quot;rowKey&quot;:&quot;Row3128_Row3128&quot;},{&quot;value&quot;:238.0,&quot;rowKey&quot;:&quot;Row4315_Row4315&quot;},{&quot;value&quot;:253.99999999999997,&quot;rowKey&quot;:&quot;Row2843_Row2843&quot;},{&quot;value&quot;:286.2857142857143,&quot;rowKey&quot;:&quot;Row3685_Row3685&quot;},{&quot;value&quot;:289.99999999999994,&quot;rowKey&quot;:&quot;Row2071_Row2071&quot;},{&quot;value&quot;:232.5,&quot;rowKey&quot;:&quot;Row1332_Row1332&quot;},{&quot;value&quot;:261.59999999999997,&quot;rowKey&quot;:&quot;Row1384_Row1384&quot;},{&quot;value&quot;:257.99999999999994,&quot;rowKey&quot;:&quot;Row254_Row254&quot;},{&quot;value&quot;:311.99999999999994,&quot;rowKey&quot;:&quot;Row1113_Row1113&quot;},{&quot;value&quot;:288.0,&quot;rowKey&quot;:&quot;Row2526_Row2526&quot;},{&quot;value&quot;:225.33333333333331,&quot;rowKey&quot;:&quot;Row3825_Row3825&quot;},{&quot;value&quot;:278.99999999999994,&quot;rowKey&quot;:&quot;Row1853_Row1853&quot;},{&quot;value&quot;:241.0,&quot;rowKey&quot;:&quot;Row1537_Row1537&quot;},{&quot;value&quot;:311.0,&quot;rowKey&quot;:&quot;Row2874_Row2874&quot;}],&quot;median&quot;:72.58333333333331},&quot;cluster_3&quot;:{&quot;min&quot;:2.9999999999999996,&quot;extremeOutliers&quot;:[],&quot;max&quot;:344.0,&quot;lowerQuartile&quot;:93.49999999999999,&quot;upperQuartile&quot;:197.0,&quot;lowerWhisker&quot;:2.9999999999999996,&quot;upperWhisker&quot;:344.0,&quot;mildOutliers&quot;:[],&quot;median&quot;:140.0}},&quot;frequenza_acquisti&quot;:{&quot;cluster_0&quot;:{&quot;min&quot;:2.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:17.0,&quot;lowerQuartile&quot;:5.0,&quot;upperQuartile&quot;:10.0,&quot;lowerWhisker&quot;:2.0,&quot;upperWhisker&quot;:17.0,&quot;mildOutliers&quot;:[],&quot;median&quot;:7.0},&quot;cluster_1&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:11.0,&quot;lowerQuartile&quot;:1.0,&quot;upperQuartile&quot;:4.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:8.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row1408_Row1408&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row738_Row738&quot;},{&quot;value&quot;:11.0,&quot;rowKey&quot;:&quot;Row1846_Row1846&quot;}],&quot;median&quot;:2.0},&quot;cluster_2&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row4166_Row4166&quot;},{&quot;value&quot;:11.0,&quot;rowKey&quot;:&quot;Row2401_Row2401&quot;},{&quot;value&quot;:12.0,&quot;rowKey&quot;:&quot;Row3689_Row3689&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row205_Row205&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row511_Row511&quot;}],&quot;max&quot;:12.0,&quot;lowerQuartile&quot;:1.0,&quot;upperQuartile&quot;:3.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:6.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2755_Row2755&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3685_Row3685&quot;},{&quot;value&quot;:8.0,&quot;rowKey&quot;:&quot;Row3530_Row3530&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3995_Row3995&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row4071_Row4071&quot;},{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row1216_Row1216&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3944_Row3944&quot;},{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row259_Row259&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2747_Row2747&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row4121_Row4121&quot;},{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row3379_Row3379&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2298_Row2298&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1796_Row1796&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2877_Row2877&quot;},{&quot;value&quot;:8.0,&quot;rowKey&quot;:&quot;Row3490_Row3490&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row5_Row5&quot;},{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row4011_Row4011&quot;},{&quot;value&quot;:9.0,&quot;rowKey&quot;:&quot;Row2947_Row2947&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2221_Row2221&quot;},{&quot;value&quot;:8.0,&quot;rowKey&quot;:&quot;Row2493_Row2493&quot;}],&quot;median&quot;:2.0},&quot;cluster_3&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:7.0,&quot;lowerQuartile&quot;:1.0,&quot;upperQuartile&quot;:3.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:6.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3808_Row3808&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1364_Row1364&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3544_Row3544&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3475_Row3475&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row4082_Row4082&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1035_Row1035&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row899_Row899&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1555_Row1555&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row2149_Row2149&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3360_Row3360&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1761_Row1761&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3388_Row3388&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row4295_Row4295&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row1757_Row1757&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row204_Row204&quot;},{&quot;value&quot;:7.0,&quot;rowKey&quot;:&quot;Row3698_Row3698&quot;}],&quot;median&quot;:2.0}},&quot;Prezzo Medio&quot;:{&quot;cluster_0&quot;:{&quot;min&quot;:0.4592434072400674,&quot;extremeOutliers&quot;:[{&quot;value&quot;:5.42710727426079,&quot;rowKey&quot;:&quot;Row1618_Row1618&quot;},{&quot;value&quot;:5.0447216043558685,&quot;rowKey&quot;:&quot;Row2916_Row2916&quot;}],&quot;max&quot;:5.42710727426079,&quot;lowerQuartile&quot;:1.6509452141197647,&quot;upperQuartile&quot;:2.47465445992654,&quot;lowerWhisker&quot;:0.4592434072400674,&quot;upperWhisker&quot;:3.6749196089882483,&quot;mildOutliers&quot;:[{&quot;value&quot;:4.136614338900003,&quot;rowKey&quot;:&quot;Row2083_Row2083&quot;},{&quot;value&quot;:4.240713627750381,&quot;rowKey&quot;:&quot;Row563_Row563&quot;},{&quot;value&quot;:4.149357038431797,&quot;rowKey&quot;:&quot;Row3247_Row3247&quot;},{&quot;value&quot;:3.8752741223315876,&quot;rowKey&quot;:&quot;Row296_Row296&quot;},{&quot;value&quot;:3.7686343073593065,&quot;rowKey&quot;:&quot;Row1926_Row1926&quot;},{&quot;value&quot;:3.8128907584104166,&quot;rowKey&quot;:&quot;Row12_Row12&quot;},{&quot;value&quot;:4.3151226321948775,&quot;rowKey&quot;:&quot;Row2462_Row2462&quot;},{&quot;value&quot;:3.798400185945025,&quot;rowKey&quot;:&quot;Row580_Row580&quot;},{&quot;value&quot;:4.90361569365235,&quot;rowKey&quot;:&quot;Row334_Row334&quot;},{&quot;value&quot;:4.675444761566107,&quot;rowKey&quot;:&quot;Row3295_Row3295&quot;},{&quot;value&quot;:3.783255848227973,&quot;rowKey&quot;:&quot;Row1376_Row1376&quot;},{&quot;value&quot;:4.36696011652276,&quot;rowKey&quot;:&quot;Row3135_Row3135&quot;},{&quot;value&quot;:4.030908297304858,&quot;rowKey&quot;:&quot;Row2596_Row2596&quot;},{&quot;value&quot;:4.15377520049245,&quot;rowKey&quot;:&quot;Row105_Row105&quot;},{&quot;value&quot;:4.191882440334777,&quot;rowKey&quot;:&quot;Row2331_Row2331&quot;},{&quot;value&quot;:4.797532163218231,&quot;rowKey&quot;:&quot;Row79_Row79&quot;},{&quot;value&quot;:4.349771498556625,&quot;rowKey&quot;:&quot;Row944_Row944&quot;},{&quot;value&quot;:4.445447638671678,&quot;rowKey&quot;:&quot;Row4019_Row4019&quot;},{&quot;value&quot;:3.893387989471074,&quot;rowKey&quot;:&quot;Row2580_Row2580&quot;},{&quot;value&quot;:4.764731212838631,&quot;rowKey&quot;:&quot;Row2315_Row2315&quot;}],&quot;median&quot;:2.0053360215053764},&quot;cluster_1&quot;:{&quot;min&quot;:0.33224142080184815,&quot;extremeOutliers&quot;:[{&quot;value&quot;:4.199999999999999,&quot;rowKey&quot;:&quot;Row332_Row332&quot;}],&quot;max&quot;:4.199999999999999,&quot;lowerQuartile&quot;:1.0734413601448822,&quot;upperQuartile&quot;:1.7758132419561734,&quot;lowerWhisker&quot;:0.33224142080184815,&quot;upperWhisker&quot;:2.825870206489674,&quot;mildOutliers&quot;:[{&quot;value&quot;:2.8783502927911733,&quot;rowKey&quot;:&quot;Row2186_Row2186&quot;},{&quot;value&quot;:3.242429378531073,&quot;rowKey&quot;:&quot;Row2710_Row2710&quot;},{&quot;value&quot;:3.6993939393939392,&quot;rowKey&quot;:&quot;Row3070_Row3070&quot;},{&quot;value&quot;:2.8489719626168215,&quot;rowKey&quot;:&quot;Row2792_Row2792&quot;},{&quot;value&quot;:3.1886171399486947,&quot;rowKey&quot;:&quot;Row2772_Row2772&quot;},{&quot;value&quot;:3.268333333333333,&quot;rowKey&quot;:&quot;Row2169_Row2169&quot;},{&quot;value&quot;:3.6815035979273647,&quot;rowKey&quot;:&quot;Row70_Row70&quot;},{&quot;value&quot;:2.8676166456494325,&quot;rowKey&quot;:&quot;Row3482_Row3482&quot;},{&quot;value&quot;:2.9967142857142863,&quot;rowKey&quot;:&quot;Row2290_Row2290&quot;},{&quot;value&quot;:2.855584045584045,&quot;rowKey&quot;:&quot;Row81_Row81&quot;},{&quot;value&quot;:3.465206611570247,&quot;rowKey&quot;:&quot;Row611_Row611&quot;}],&quot;median&quot;:1.4198203413619381},&quot;cluster_2&quot;:{&quot;min&quot;:2.55,&quot;extremeOutliers&quot;:[],&quot;max&quot;:5.804908630806738,&quot;lowerQuartile&quot;:3.0300400362165067,&quot;upperQuartile&quot;:4.178065719855194,&quot;lowerWhisker&quot;:2.55,&quot;upperWhisker&quot;:5.804908630806738,&quot;mildOutliers&quot;:[],&quot;median&quot;:3.519557954354984},&quot;cluster_3&quot;:{&quot;min&quot;:0.2899999999999999,&quot;extremeOutliers&quot;:[],&quot;max&quot;:2.9899999999999998,&quot;lowerQuartile&quot;:1.4306108951234298,&quot;upperQuartile&quot;:2.172010869565217,&quot;lowerWhisker&quot;:0.3872332015810278,&quot;upperWhisker&quot;:2.9899999999999998,&quot;mildOutliers&quot;:[{&quot;value&quot;:0.2899999999999999,&quot;rowKey&quot;:&quot;Row4185_Row4185&quot;},{&quot;value&quot;:0.2899999999999999,&quot;rowKey&quot;:&quot;Row2498_Row2498&quot;}],&quot;median&quot;:1.7771096429976672}},&quot;numero_articoli&quot;:{&quot;cluster_0&quot;:{&quot;min&quot;:4.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:258.0,&quot;lowerQuartile&quot;:90.0,&quot;upperQuartile&quot;:159.0,&quot;lowerWhisker&quot;:4.0,&quot;upperWhisker&quot;:258.0,&quot;mildOutliers&quot;:[],&quot;median&quot;:119.00000000000001},&quot;cluster_1&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:226.0,&quot;lowerQuartile&quot;:31.0,&quot;upperQuartile&quot;:84.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:159.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:194.0,&quot;rowKey&quot;:&quot;Row1420_Row1420&quot;},{&quot;value&quot;:207.0,&quot;rowKey&quot;:&quot;Row745_Row745&quot;},{&quot;value&quot;:164.0,&quot;rowKey&quot;:&quot;Row988_Row988&quot;},{&quot;value&quot;:174.0,&quot;rowKey&quot;:&quot;Row4229_Row4229&quot;},{&quot;value&quot;:191.0,&quot;rowKey&quot;:&quot;Row2450_Row2450&quot;},{&quot;value&quot;:193.0,&quot;rowKey&quot;:&quot;Row2229_Row2229&quot;},{&quot;value&quot;:226.0,&quot;rowKey&quot;:&quot;Row3368_Row3368&quot;},{&quot;value&quot;:183.0,&quot;rowKey&quot;:&quot;Row202_Row202&quot;},{&quot;value&quot;:181.00000000000003,&quot;rowKey&quot;:&quot;Row867_Row867&quot;},{&quot;value&quot;:192.0,&quot;rowKey&quot;:&quot;Row286_Row286&quot;},{&quot;value&quot;:185.0,&quot;rowKey&quot;:&quot;Row589_Row589&quot;},{&quot;value&quot;:212.0,&quot;rowKey&quot;:&quot;Row3367_Row3367&quot;},{&quot;value&quot;:179.0,&quot;rowKey&quot;:&quot;Row3318_Row3318&quot;},{&quot;value&quot;:190.0,&quot;rowKey&quot;:&quot;Row3829_Row3829&quot;},{&quot;value&quot;:196.0,&quot;rowKey&quot;:&quot;Row2341_Row2341&quot;},{&quot;value&quot;:165.00000000000003,&quot;rowKey&quot;:&quot;Row2254_Row2254&quot;},{&quot;value&quot;:182.0,&quot;rowKey&quot;:&quot;Row3419_Row3419&quot;},{&quot;value&quot;:168.0,&quot;rowKey&quot;:&quot;Row3832_Row3832&quot;}],&quot;median&quot;:55.00000000000001},&quot;cluster_2&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:101.0,&quot;lowerQuartile&quot;:9.0,&quot;upperQuartile&quot;:33.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:69.0,&quot;mildOutliers&quot;:[{&quot;value&quot;:92.0,&quot;rowKey&quot;:&quot;Row1772_Row1772&quot;},{&quot;value&quot;:72.0,&quot;rowKey&quot;:&quot;Row3266_Row3266&quot;},{&quot;value&quot;:89.0,&quot;rowKey&quot;:&quot;Row3343_Row3343&quot;},{&quot;value&quot;:94.00000000000001,&quot;rowKey&quot;:&quot;Row3628_Row3628&quot;},{&quot;value&quot;:90.0,&quot;rowKey&quot;:&quot;Row4312_Row4312&quot;},{&quot;value&quot;:86.00000000000001,&quot;rowKey&quot;:&quot;Row2953_Row2953&quot;},{&quot;value&quot;:85.0,&quot;rowKey&quot;:&quot;Row3490_Row3490&quot;},{&quot;value&quot;:101.0,&quot;rowKey&quot;:&quot;Row124_Row124&quot;},{&quot;value&quot;:78.00000000000001,&quot;rowKey&quot;:&quot;Row3043_Row3043&quot;},{&quot;value&quot;:83.00000000000001,&quot;rowKey&quot;:&quot;Row1096_Row1096&quot;},{&quot;value&quot;:74.0,&quot;rowKey&quot;:&quot;Row3224_Row3224&quot;},{&quot;value&quot;:81.0,&quot;rowKey&quot;:&quot;Row3869_Row3869&quot;},{&quot;value&quot;:79.00000000000001,&quot;rowKey&quot;:&quot;Row3556_Row3556&quot;},{&quot;value&quot;:86.00000000000001,&quot;rowKey&quot;:&quot;Row3586_Row3586&quot;},{&quot;value&quot;:73.0,&quot;rowKey&quot;:&quot;Row2343_Row2343&quot;},{&quot;value&quot;:82.0,&quot;rowKey&quot;:&quot;Row3327_Row3327&quot;},{&quot;value&quot;:75.00000000000001,&quot;rowKey&quot;:&quot;Row491_Row491&quot;},{&quot;value&quot;:79.00000000000001,&quot;rowKey&quot;:&quot;Row3128_Row3128&quot;},{&quot;value&quot;:75.00000000000001,&quot;rowKey&quot;:&quot;Row949_Row949&quot;},{&quot;value&quot;:80.0,&quot;rowKey&quot;:&quot;Row2161_Row2161&quot;}],&quot;median&quot;:19.0},&quot;cluster_3&quot;:{&quot;min&quot;:1.0,&quot;extremeOutliers&quot;:[],&quot;max&quot;:122.0,&quot;lowerQuartile&quot;:12.0,&quot;upperQuartile&quot;:42.0,&quot;lowerWhisker&quot;:1.0,&quot;upperWhisker&quot;:86.00000000000001,&quot;mildOutliers&quot;:[{&quot;value&quot;:95.00000000000001,&quot;rowKey&quot;:&quot;Row1693_Row1693&quot;},{&quot;value&quot;:113.0,&quot;rowKey&quot;:&quot;Row3657_Row3657&quot;},{&quot;value&quot;:102.00000000000001,&quot;rowKey&quot;:&quot;Row454_Row454&quot;},{&quot;value&quot;:106.0,&quot;rowKey&quot;:&quot;Row4156_Row4156&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row4127_Row4127&quot;},{&quot;value&quot;:91.00000000000001,&quot;rowKey&quot;:&quot;Row3384_Row3384&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row166_Row166&quot;},{&quot;value&quot;:107.00000000000001,&quot;rowKey&quot;:&quot;Row1554_Row1554&quot;},{&quot;value&quot;:108.0,&quot;rowKey&quot;:&quot;Row3189_Row3189&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row2943_Row2943&quot;},{&quot;value&quot;:115.00000000000001,&quot;rowKey&quot;:&quot;Row388_Row388&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row3588_Row3588&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row2954_Row2954&quot;},{&quot;value&quot;:90.0,&quot;rowKey&quot;:&quot;Row2696_Row2696&quot;},{&quot;value&quot;:96.0,&quot;rowKey&quot;:&quot;Row1990_Row1990&quot;},{&quot;value&quot;:101.0,&quot;rowKey&quot;:&quot;Row3803_Row3803&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row460_Row460&quot;},{&quot;value&quot;:89.0,&quot;rowKey&quot;:&quot;Row3168_Row3168&quot;},{&quot;value&quot;:89.0,&quot;rowKey&quot;:&quot;Row3547_Row3547&quot;},{&quot;value&quot;:88.0,&quot;rowKey&quot;:&quot;Row4046_Row4046&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row1338_Row1338&quot;},{&quot;value&quot;:103.00000000000001,&quot;rowKey&quot;:&quot;Row2353_Row2353&quot;},{&quot;value&quot;:91.00000000000001,&quot;rowKey&quot;:&quot;Row3535_Row3535&quot;},{&quot;value&quot;:104.0,&quot;rowKey&quot;:&quot;Row3591_Row3591&quot;},{&quot;value&quot;:114.0,&quot;rowKey&quot;:&quot;Row323_Row323&quot;},{&quot;value&quot;:91.00000000000001,&quot;rowKey&quot;:&quot;Row2703_Row2703&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row2577_Row2577&quot;},{&quot;value&quot;:107.00000000000001,&quot;rowKey&quot;:&quot;Row1963_Row1963&quot;},{&quot;value&quot;:88.0,&quot;rowKey&quot;:&quot;Row2652_Row2652&quot;},{&quot;value&quot;:95.00000000000001,&quot;rowKey&quot;:&quot;Row2598_Row2598&quot;},{&quot;value&quot;:116.0,&quot;rowKey&quot;:&quot;Row2539_Row2539&quot;},{&quot;value&quot;:89.0,&quot;rowKey&quot;:&quot;Row2380_Row2380&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row2914_Row2914&quot;},{&quot;value&quot;:92.0,&quot;rowKey&quot;:&quot;Row3609_Row3609&quot;},{&quot;value&quot;:101.0,&quot;rowKey&quot;:&quot;Row2595_Row2595&quot;},{&quot;value&quot;:101.0,&quot;rowKey&quot;:&quot;Row2613_Row2613&quot;},{&quot;value&quot;:102.00000000000001,&quot;rowKey&quot;:&quot;Row3983_Row3983&quot;},{&quot;value&quot;:93.0,&quot;rowKey&quot;:&quot;Row4042_Row4042&quot;},{&quot;value&quot;:105.0,&quot;rowKey&quot;:&quot;Row1979_Row1979&quot;},{&quot;value&quot;:87.00000000000001,&quot;rowKey&quot;:&quot;Row2372_Row2372&quot;},{&quot;value&quot;:88.0,&quot;rowKey&quot;:&quot;Row3686_Row3686&quot;},{&quot;value&quot;:106.0,&quot;rowKey&quot;:&quot;Row3594_Row3594&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row2225_Row2225&quot;},{&quot;value&quot;:122.0,&quot;rowKey&quot;:&quot;Row2597_Row2597&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row4053_Row4053&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row4237_Row4237&quot;},{&quot;value&quot;:110.00000000000001,&quot;rowKey&quot;:&quot;Row1943_Row1943&quot;},{&quot;value&quot;:95.00000000000001,&quot;rowKey&quot;:&quot;Row401_Row401&quot;},{&quot;value&quot;:107.00000000000001,&quot;rowKey&quot;:&quot;Row1709_Row1709&quot;}],&quot;median&quot;:24.0}}},&quot;catCol&quot;:&quot;Cluster&quot;}"/>
</config>
<config key="inObject_1">
<entry key="jsonValue" type="xstring" isnull="true" value=""/>
</config>
</config>
<entry key="warnMessage" type="xstring" value=""/>
<entry key="errorMessage" type="xstring" value=""/>
</config>
